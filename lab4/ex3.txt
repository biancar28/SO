#include <unistd.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <errno.h>
#include <stdlib.h> 


int main(int argc, char* argv[])
{
//Schimbare

	if(argc<2){
		
		return -1;
	}
	
	pid_t pid;
	printf("Starting parent %d\n", getpid());
	
	for(int i = 1; i<argc; i++){
		
		int n = atoi(argv[i]);
		pid = fork();
		
		if(pid<0){
			
			perror("Problem with fork");
			return errno;
		}
		else if(pid==0){
			
			printf("%d: ", n);
			while(n != 1){
		
				printf("%d ", n);
		
				if(n%2 == 0){
			
					n = n/2;
				}	
				else{
			
					n = 3*n+1;
				}
			}
			printf("1.\n");
			
			printf("Done Parent %d Me %d\n", getppid(), getpid());
			break;
		
		}
	}
	
	if(pid>0){
	
		for(int i = 1; i<argc ;i++){
			wait(NULL);
		}
	}
	


	return 0;

}